"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4834],{2426:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"templates/create_sync","title":"Synchronize from Git repository","description":"This guide explains how to create templates by synchronizing them from a Git repository. The system supports both public and private Git repositories, allowing you to maintain your templates in version control.","source":"@site/docs/templates/create_sync.md","sourceDirName":"templates","slug":"/templates/create_sync","permalink":"/docs/templates/create_sync","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Import from Helm chart","permalink":"/docs/templates/create_import"},"next":{"title":"Blade templating","permalink":"/docs/templates/use_blade"}}');var r=t(4848),l=t(8453);const s={sidebar_position:2},o="Synchronize from Git repository",a={},d=[{value:"Required Parameters",id:"required-parameters",level:2},{value:"Basic Information",id:"basic-information",level:3},{value:"Git Configuration",id:"git-configuration",level:3},{value:"Repository Structure",id:"repository-structure",level:2},{value:"Field Configuration",id:"field-configuration",level:3},{value:"Field Types and Properties",id:"field-types-and-properties",level:4},{value:"Port Configuration",id:"port-configuration",level:3},{value:"Port Properties",id:"port-properties",level:4},{value:"Template Rendering",id:"template-rendering",level:2},{value:"Synchronization Process",id:"synchronization-process",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"synchronize-from-git-repository",children:"Synchronize from Git repository"})}),"\n",(0,r.jsx)(n.p,{children:"This guide explains how to create templates by synchronizing them from a Git repository. The system supports both public and private Git repositories, allowing you to maintain your templates in version control."}),"\n",(0,r.jsx)(n.h2,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,r.jsx)(n.p,{children:"To synchronize a template from a Git repository, you need to provide the following parameters:"}),"\n",(0,r.jsx)(n.h3,{id:"basic-information",children:"Basic Information"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": A unique name for the template"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"git-configuration",children:"Git Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.url"}),": Repository URL (e.g., ",(0,r.jsx)(n.a,{href:"https://github.com/org/template-repo.git",children:"https://github.com/org/template-repo.git"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.branch"}),": Branch name (e.g., main)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.credentials"}),": Git token or password (for private repositories)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.username"}),": Git username (for private repositories)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.email"}),": Git user email (for private repositories)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"git.base_path"}),": Path where templates are stored (e.g., templates/)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"repository-structure",children:"Repository Structure"}),"\n",(0,r.jsxs)(n.p,{children:["Your Git repository should follow this structure. You can find a complete example in our ",(0,r.jsx)(n.a,{href:"https://github.com/kublade/template-repository",children:"template repository"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"repository/\n\u251c\u2500\u2500 .kublade/              # Kublade-specific configuration\n\u2502   \u251c\u2500\u2500 fields.json        # Field configuration\n\u2502   \u2514\u2500\u2500 ports.json         # Port configuration\n\u251c\u2500\u2500 kustomization.yaml     # Kustomize configuration\n\u251c\u2500\u2500 namespace.yaml         # Namespace definition\n\u251c\u2500\u2500 deployment.yaml        # Deployment manifest\n\u251c\u2500\u2500 service.yaml          # Service manifest\n\u2514\u2500\u2500 other-resources/      # Additional resources\n    \u251c\u2500\u2500 configmap.yaml\n    \u2514\u2500\u2500 secret.yaml\n"})}),"\n",(0,r.jsx)(n.h3,{id:"field-configuration",children:"Field Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".kublade/fields.json"})," file defines the input fields that will be available in the template. Each field has specific properties:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "type": "input_text",\n    "key": "text_example",\n    "label": "Text Example",\n    "value": "example",\n    "required": true,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": false\n  },\n  {\n    "type": "textarea",\n    "key": "textarea_example",\n    "label": "Textarea Example",\n    "value": null,\n    "required": true,\n    "secret": false,\n    "set_on_create": false,\n    "set_on_update": true\n  },\n  {\n    "type": "input_number",\n    "key": "number_example",\n    "label": "Number Example",\n    "value": 20,\n    "min": 10,\n    "max": 100,\n    "step": 10,\n    "required": true,\n    "secret": true,\n    "set_on_create": true,\n    "set_on_update": true\n  },\n  {\n    "type": "input_range",\n    "key": "range_example",\n    "label": "Range Example",\n    "value": 5,\n    "min": 1,\n    "max": 10,\n    "step": 1,\n    "required": false,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": true\n  },\n  {\n    "type": "input_radio",\n    "key": "radio_example",\n    "label": "Radio Example",\n    "value": null,\n    "options": [\n      { "label": "Option 1", "value": "option1", "default": true },\n      { "label": "Option 2", "value": "option2", "default": false }\n    ],\n    "required": false,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": true\n  },\n  {\n    "type": "input_radio_image",\n    "key": "radio_image_example",\n    "label": "Radio Image Example",\n    "value": null,\n    "options": [\n      { "label": "https://placehold.co/600x400", "value": "option1", "default": true },\n      { "label": "https://placehold.co/400x600", "value": "option2", "default": false }\n    ],\n    "required": false,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": true\n  },\n  {\n    "type": "select",\n    "key": "select_example",\n    "label": "Select Example",\n    "value": null,\n    "options": [\n      { "label": "Option 1", "value": "option1", "default": false },\n      { "label": "Option 2", "value": "option2", "default": true }\n    ],\n    "required": false,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": true\n  },\n  {\n    "type": "input_checkbox",\n    "key": "checkbox_example",\n    "label": "Checkbox Example",\n    "value": "example",\n    "required": true,\n    "secret": false,\n    "set_on_create": true,\n    "set_on_update": true\n  }\n]\n'})}),"\n",(0,r.jsx)(n.h4,{id:"field-types-and-properties",children:"Field Types and Properties"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Properties"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": The type of input field"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"}),": Unique identifier for the field"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"label"}),": Display name for the field"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"}),": Default value"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"required"}),": Whether the field is mandatory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"secret"}),": Whether the field contains sensitive data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"set_on_create"}),": Whether the field can be set during creation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"set_on_update"}),": Whether the field can be updated after creation"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Available Field Types"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_text"}),": Single-line text input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textarea"}),": Multi-line text input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_number"}),": Numeric input with min/max/step"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_range"}),": Slider input with min/max/step"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_radio"}),": Radio button group"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_radio_image"}),": Radio buttons with images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"select"}),": Dropdown selection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"input_checkbox"}),": Checkbox input"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"port-configuration",children:"Port Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".kublade/ports.json"})," file defines the port claims for your template:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "group": "k8s-test",\n    "claim": "httpExample",\n    "preferred_port": 8080,\n    "random": true\n  },\n  {\n    "group": "k8s-test",\n    "claim": "httpsExample",\n    "preferred_port": 8443,\n    "random": true\n  }\n]\n'})}),"\n",(0,r.jsx)(n.h4,{id:"port-properties",children:"Port Properties"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Common Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"group"}),': The port group (e.g., "k8s-test")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"claim"}),": Unique identifier for the port claim"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preferred_port"}),": The preferred port number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"random"}),": Whether a random port should be used if the preferred port is unavailable"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"template-rendering",children:"Template Rendering"}),"\n",(0,r.jsx)(n.p,{children:"For detailed information about templating your Kubernetes manifests, including variable usage, conditional logic, and port management, refer to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/templates/use_blade",children:"Blade Templating Guide"}),": Learn how to use the Blade templating engine for dynamic manifest generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/templates/use_ports",children:"Port Management Guide"}),": Understand how to manage port claims and reservations"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"synchronization-process",children:"Synchronization Process"}),"\n",(0,r.jsx)(n.p,{children:"When synchronizing a template, the system will:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Clone the specified repository"}),"\n",(0,r.jsx)(n.li,{children:"Read the template contents"}),"\n",(0,r.jsx)(n.li,{children:"Validate the template structure"}),"\n",(0,r.jsx)(n.li,{children:"Make the template available for use"}),"\n",(0,r.jsx)(n.li,{children:"Periodically check for updates"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);