"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8847],{3780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"ai-integration","title":"AI Integration","description":"The AI companion integration in Kublade provides intelligent assistance through various AI models. By default, it integrates with OpenAI\'s API, but it also supports Open WebUI\'s API as a drop-in replacement for self-hosted models.","source":"@site/docs/ai-integration.md","sourceDirName":".","slug":"/ai-integration","permalink":"/docs/ai-integration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"Monitoring","permalink":"/docs/clusters/monitor"}}');var s=t(4848),r=t(8453);const o={sidebar_position:10},a="AI Integration",c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Example Configuration",id:"example-configuration",level:3},{value:"API Integration",id:"api-integration",level:2},{value:"System Prompts",id:"system-prompts",level:2},{value:"Chat Interface",id:"chat-interface",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ai-integration",children:"AI Integration"})}),"\n",(0,s.jsx)(n.p,{children:"The AI companion integration in Kublade provides intelligent assistance through various AI models. By default, it integrates with OpenAI's API, but it also supports Open WebUI's API as a drop-in replacement for self-hosted models."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The AI integration can be configured using the following environment variables:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AI_ENABLED"})}),(0,s.jsx)(n.td,{children:"Enable/disable the AI integration"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AI_MODEL"})}),(0,s.jsx)(n.td,{children:"The model to use for AI completions"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"o4-mini"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AI_API_KEY"})}),(0,s.jsx)(n.td,{children:"API key for the AI service"}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AI_URL"})}),(0,s.jsx)(n.td,{children:"Base URL for the AI API"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"https://api.openai.com/v1"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# OpenAI Configuration\nAI_ENABLED=true\nAI_MODEL=o4-mini\nAI_API_KEY=your-api-key-here\nAI_URL=https://api.openai.com/v1\n\n# Open WebUI Configuration\nAI_ENABLED=true\nAI_MODEL=your-model-name\nAI_API_KEY=your-api-key-here\nAI_URL=http://your-openwebui-instance:8080/v1\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api-integration",children:"API Integration"}),"\n",(0,s.jsxs)(n.p,{children:["The AI integration uses the ",(0,s.jsx)(n.code,{children:"/chat/completions"})," endpoint for generating responses. This standardized endpoint makes it possible to use different AI providers that implement the same API interface, such as Open WebUI."]}),"\n",(0,s.jsx)(n.h2,{id:"system-prompts",children:"System Prompts"}),"\n",(0,s.jsx)(n.p,{children:"The AI companion uses custom system prompts to define its behavior. These prompts can be:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Global"}),": Define the general behavior of the AI agent"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context-aware"}),": Additional prompts are sent based on the current context, such as:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Template variables when editing a template"}),"\n",(0,s.jsx)(n.li,{children:"Deployment-specific information"}),"\n",(0,s.jsx)(n.li,{children:"Current page context"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This context-aware approach ensures that the AI assistant can provide relevant and accurate assistance based on the user's current task and environment."}),"\n",(0,s.jsx)(n.h2,{id:"chat-interface",children:"Chat Interface"}),"\n",(0,s.jsx)(n.p,{children:"When the AI integration is enabled and you are logged in, you can access the AI chat through a bot icon located in the bottom right corner of the interface. The chat interface provides the following features:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quick Access"}),": The persistent bot icon allows you to start or continue conversations at any time"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Chat History"}),": Previous conversations are preserved and can be continued"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Management"}),": Each chat session maintains its context and history"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context Awareness"}),": The AI assistant automatically receives relevant context based on your current location in the application"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Privacy"}),": All chat sessions are user-bound and can only be accessed by the user who owns the conversation"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To start using the AI chat:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure the AI integration is enabled in your configuration"}),"\n",(0,s.jsx)(n.li,{children:"Log in to your Kublade instance"}),"\n",(0,s.jsx)(n.li,{children:"Look for the bot icon in the bottom right corner"}),"\n",(0,s.jsx)(n.li,{children:"Click the icon to open the chat window"}),"\n",(0,s.jsx)(n.li,{children:"Start a new conversation or continue an existing one"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The chat interface preserves the entire conversation history, allowing you to maintain context across multiple sessions and interactions with the AI assistant."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);